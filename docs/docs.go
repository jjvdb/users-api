// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "Authenticates a user with email and password and returns a JWT access token and a refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Logs out the user from all devices by invalidating all refresh tokens associated with their account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout user from current device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh token",
                        "name": "Refresh",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logout/all": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logs out the user from all devices by invalidating all provided refresh tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout user from all devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/markbookasread/{bookid}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark a book of the Bible as read",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "read_history"
                ],
                "summary": "Mark a whole book read",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the book, can be the name of the book, abbreviation or the number (1-66)",
                        "name": "bookid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MarkBookReadResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark a book of the Bible as unread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "read_history"
                ],
                "summary": "Mark a whole book unread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the book, can be the name of the book, abbreviation or the number (1-66)",
                        "name": "bookid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MarkBookReadResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/markchapterasread": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark a chapter from the Bible as read",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "read_history"
                ],
                "summary": "Mark a chapter as read",
                "parameters": [
                    {
                        "description": "Bible chapter to mark as read",
                        "name": "chapter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BibleChapter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MarkChapterAsReadResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark a chapter from the Bible as unread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "read_history"
                ],
                "summary": "Mark a chapter as unread",
                "parameters": [
                    {
                        "description": "Bible chapter to mark as unread",
                        "name": "chapter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BibleChapter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MarkChapterAsReadResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/readbooksstatus": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the read status for each book in the Bible (complete, partial and not_started).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "read_history"
                ],
                "summary": "Get read progress of all Bible books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ReadBook"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/readchaptersofbook/{bookid}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the list of chapters marked as read for the specified book.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "read_history"
                ],
                "summary": "Get read chapter numbers for a book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the book, can be the name of the book, abbreviation or the number (1-66)",
                        "name": "bookid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookReadChaptersResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "Validates the refresh token and returns a new access and refresh token pair.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh JWT token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh token",
                        "name": "Refresh",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BibleChapter": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "book": {
                    "type": "string"
                },
                "book_id": {
                    "type": "integer"
                },
                "chapter": {
                    "type": "integer"
                }
            }
        },
        "models.BookReadChaptersResponse": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "book": {
                    "type": "string"
                },
                "book_id": {
                    "type": "integer"
                },
                "read_chapters": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.GenericMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "properties": {
                "device": {
                    "type": "string"
                },
                "emailorusername": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "remember": {
                    "type": "boolean"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "models.MarkBookReadResponse": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "book": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.MarkChapterAsReadResponse": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "book": {
                    "type": "string"
                },
                "chapter": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ReadBook": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "book": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.StatusType"
                }
            }
        },
        "models.StatusType": {
            "type": "string",
            "enum": [
                "complete",
                "partial",
                "not_started"
            ],
            "x-enum-varnames": [
                "StatusComplete",
                "StatusPartial",
                "StatusNotStarted"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.scripture.pp.ua",
	BasePath:         "/users",
	Schemes:          []string{},
	Title:            "Scripture users-api",
	Description:      "Fiber API with Swagger",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
